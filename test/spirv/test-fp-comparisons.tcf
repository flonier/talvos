# Test floating point comparison instructions.
# Fills buffers A and B with specific values and then executes this snippet:
#   if (A[i] <OP> B[i])
#     OUTPUT[i] = 1;

MODULE test-fp-comparisons.spvasm

BUFFER A 72 DATA FLOAT
0 0 0 1 -1 1 -1 1 1 -1
0 # will be NaN
0 # will be NaN
1
0 # will be inf
0 # will be inf
0 # will be -inf
0 # will be inf
0 # will be -inf

BUFFER B 72 DATA FLOAT
0 1 -1 0 0 -1 1 -1 1 -1
0 # will be NaN
1
0 # will be NaN
0 # will be inf
0 # will be -inf
0 # will be -inf
1
1

BUFFER oeq  72 FILL INT32 0
BUFFER ueq  72 FILL INT32 0
BUFFER oneq 72 FILL INT32 0
BUFFER uneq 72 FILL INT32 0
BUFFER olt  72 FILL INT32 0
BUFFER ult  72 FILL INT32 0
BUFFER ogt  72 FILL INT32 0
BUFFER ugt  72 FILL INT32 0
BUFFER olte 72 FILL INT32 0
BUFFER ulte 72 FILL INT32 0
BUFFER ogte 72 FILL INT32 0
BUFFER ugte 72 FILL INT32 0

BUFFER isnan   72 FILL INT32 0
BUFFER isinf   72 FILL INT32 0


DESCRIPTOR_SET 0 0 0 A
DESCRIPTOR_SET 0 1 0 B

# Generate NaN/Inf operands
ENTRY generate_special
DISPATCH 1 1 1


ENTRY test_fp_comparisons

DESCRIPTOR_SET 0 2 0 oeq
DESCRIPTOR_SET 0 3 0 ueq
DESCRIPTOR_SET 0 4 0 oneq
DESCRIPTOR_SET 0 5 0 uneq
DESCRIPTOR_SET 0 6 0 olt
DESCRIPTOR_SET 0 7 0 ult
DESCRIPTOR_SET 0 8 0 ogt
DESCRIPTOR_SET 0 9 0 ugt
DESCRIPTOR_SET 0 10 0 olte
DESCRIPTOR_SET 0 11 0 ulte
DESCRIPTOR_SET 0 12 0 ogte
DESCRIPTOR_SET 0 13 0 ugte
DESCRIPTOR_SET 0 14 0 isnan
DESCRIPTOR_SET 0 15 0 isinf

DISPATCH 18 1 1

DUMP INT32 oeq
DUMP INT32 ueq
DUMP INT32 oneq
DUMP INT32 uneq
DUMP INT32 olt
DUMP INT32 ult
DUMP INT32 ogt
DUMP INT32 ugt
DUMP INT32 olte
DUMP INT32 ulte
DUMP INT32 ogte
DUMP INT32 ugte
DUMP INT32 isnan
DUMP INT32 isinf

# CHECK: Buffer 'oeq' (72 bytes):
# CHECK:   oeq[0] = 1
# CHECK:   oeq[1] = 0
# CHECK:   oeq[2] = 0
# CHECK:   oeq[3] = 0
# CHECK:   oeq[4] = 0
# CHECK:   oeq[5] = 0
# CHECK:   oeq[6] = 0
# CHECK:   oeq[7] = 0
# CHECK:   oeq[8] = 1
# CHECK:   oeq[9] = 1
# CHECK:   oeq[10] = 0
# CHECK:   oeq[11] = 0
# CHECK:   oeq[12] = 0
# CHECK:   oeq[13] = 1
# CHECK:   oeq[14] = 0
# CHECK:   oeq[15] = 1
# CHECK:   oeq[16] = 0
# CHECK:   oeq[17] = 0

# CHECK: Buffer 'ueq' (72 bytes):
# CHECK:   ueq[0] = 1
# CHECK:   ueq[1] = 0
# CHECK:   ueq[2] = 0
# CHECK:   ueq[3] = 0
# CHECK:   ueq[4] = 0
# CHECK:   ueq[5] = 0
# CHECK:   ueq[6] = 0
# CHECK:   ueq[7] = 0
# CHECK:   ueq[8] = 1
# CHECK:   ueq[9] = 1
# CHECK:   ueq[10] = 1
# CHECK:   ueq[11] = 1
# CHECK:   ueq[12] = 1
# CHECK:   ueq[13] = 1
# CHECK:   ueq[14] = 0
# CHECK:   ueq[15] = 1
# CHECK:   ueq[16] = 0
# CHECK:   ueq[17] = 0

# CHECK: Buffer 'oneq' (72 bytes):
# CHECK:   oneq[0] = 0
# CHECK:   oneq[1] = 1
# CHECK:   oneq[2] = 1
# CHECK:   oneq[3] = 1
# CHECK:   oneq[4] = 1
# CHECK:   oneq[5] = 1
# CHECK:   oneq[6] = 1
# CHECK:   oneq[7] = 1
# CHECK:   oneq[8] = 0
# CHECK:   oneq[9] = 0
# CHECK:   oneq[10] = 0
# CHECK:   oneq[11] = 0
# CHECK:   oneq[12] = 0
# CHECK:   oneq[13] = 0
# CHECK:   oneq[14] = 1
# CHECK:   oneq[15] = 0
# CHECK:   oneq[16] = 1
# CHECK:   oneq[17] = 1

# CHECK: Buffer 'uneq' (72 bytes):
# CHECK:   uneq[0] = 0
# CHECK:   uneq[1] = 1
# CHECK:   uneq[2] = 1
# CHECK:   uneq[3] = 1
# CHECK:   uneq[4] = 1
# CHECK:   uneq[5] = 1
# CHECK:   uneq[6] = 1
# CHECK:   uneq[7] = 1
# CHECK:   uneq[8] = 0
# CHECK:   uneq[9] = 0
# CHECK:   uneq[10] = 1
# CHECK:   uneq[11] = 1
# CHECK:   uneq[12] = 1
# CHECK:   uneq[13] = 0
# CHECK:   uneq[14] = 1
# CHECK:   uneq[15] = 0
# CHECK:   uneq[16] = 1
# CHECK:   uneq[17] = 1

# CHECK: Buffer 'olt' (72 bytes):
# CHECK:   olt[0] = 0
# CHECK:   olt[1] = 1
# CHECK:   olt[2] = 0
# CHECK:   olt[3] = 0
# CHECK:   olt[4] = 1
# CHECK:   olt[5] = 0
# CHECK:   olt[6] = 1
# CHECK:   olt[7] = 0
# CHECK:   olt[8] = 0
# CHECK:   olt[9] = 0
# CHECK:   olt[10] = 0
# CHECK:   olt[11] = 0
# CHECK:   olt[12] = 0
# CHECK:   olt[13] = 0
# CHECK:   olt[14] = 0
# CHECK:   olt[15] = 0
# CHECK:   olt[16] = 0
# CHECK:   olt[17] = 1

# CHECK: Buffer 'ult' (72 bytes):
# CHECK:   ult[0] = 0
# CHECK:   ult[1] = 1
# CHECK:   ult[2] = 0
# CHECK:   ult[3] = 0
# CHECK:   ult[4] = 1
# CHECK:   ult[5] = 0
# CHECK:   ult[6] = 1
# CHECK:   ult[7] = 0
# CHECK:   ult[8] = 0
# CHECK:   ult[9] = 0
# CHECK:   ult[10] = 1
# CHECK:   ult[11] = 1
# CHECK:   ult[12] = 1
# CHECK:   ult[13] = 0
# CHECK:   ult[14] = 0
# CHECK:   ult[15] = 0
# CHECK:   ult[16] = 0
# CHECK:   ult[17] = 1

# CHECK: Buffer 'ogt' (72 bytes):
# CHECK:   ogt[0] = 0
# CHECK:   ogt[1] = 0
# CHECK:   ogt[2] = 1
# CHECK:   ogt[3] = 1
# CHECK:   ogt[4] = 0
# CHECK:   ogt[5] = 1
# CHECK:   ogt[6] = 0
# CHECK:   ogt[7] = 1
# CHECK:   ogt[8] = 0
# CHECK:   ogt[9] = 0
# CHECK:   ogt[10] = 0
# CHECK:   ogt[11] = 0
# CHECK:   ogt[12] = 0
# CHECK:   ogt[13] = 0
# CHECK:   ogt[14] = 1
# CHECK:   ogt[15] = 0
# CHECK:   ogt[16] = 1
# CHECK:   ogt[17] = 0

# CHECK: Buffer 'ugt' (72 bytes):
# CHECK:   ugt[0] = 0
# CHECK:   ugt[1] = 0
# CHECK:   ugt[2] = 1
# CHECK:   ugt[3] = 1
# CHECK:   ugt[4] = 0
# CHECK:   ugt[5] = 1
# CHECK:   ugt[6] = 0
# CHECK:   ugt[7] = 1
# CHECK:   ugt[8] = 0
# CHECK:   ugt[9] = 0
# CHECK:   ugt[10] = 1
# CHECK:   ugt[11] = 1
# CHECK:   ugt[12] = 1
# CHECK:   ugt[13] = 0
# CHECK:   ugt[14] = 1
# CHECK:   ugt[15] = 0
# CHECK:   ugt[16] = 1
# CHECK:   ugt[17] = 0

# CHECK: Buffer 'olte' (72 bytes):
# CHECK:   olte[0] = 1
# CHECK:   olte[1] = 1
# CHECK:   olte[2] = 0
# CHECK:   olte[3] = 0
# CHECK:   olte[4] = 1
# CHECK:   olte[5] = 0
# CHECK:   olte[6] = 1
# CHECK:   olte[7] = 0
# CHECK:   olte[8] = 1
# CHECK:   olte[9] = 1
# CHECK:   olte[10] = 0
# CHECK:   olte[11] = 0
# CHECK:   olte[12] = 0
# CHECK:   olte[13] = 1
# CHECK:   olte[14] = 0
# CHECK:   olte[15] = 1
# CHECK:   olte[16] = 0
# CHECK:   olte[17] = 1

# CHECK: Buffer 'ulte' (72 bytes):
# CHECK:   ulte[0] = 1
# CHECK:   ulte[1] = 1
# CHECK:   ulte[2] = 0
# CHECK:   ulte[3] = 0
# CHECK:   ulte[4] = 1
# CHECK:   ulte[5] = 0
# CHECK:   ulte[6] = 1
# CHECK:   ulte[7] = 0
# CHECK:   ulte[8] = 1
# CHECK:   ulte[9] = 1
# CHECK:   ulte[10] = 1
# CHECK:   ulte[11] = 1
# CHECK:   ulte[12] = 1
# CHECK:   ulte[13] = 1
# CHECK:   ulte[14] = 0
# CHECK:   ulte[15] = 1
# CHECK:   ulte[16] = 0
# CHECK:   ulte[17] = 1

# CHECK: Buffer 'ogte' (72 bytes):
# CHECK:   ogte[0] = 1
# CHECK:   ogte[1] = 0
# CHECK:   ogte[2] = 1
# CHECK:   ogte[3] = 1
# CHECK:   ogte[4] = 0
# CHECK:   ogte[5] = 1
# CHECK:   ogte[6] = 0
# CHECK:   ogte[7] = 1
# CHECK:   ogte[8] = 1
# CHECK:   ogte[9] = 1
# CHECK:   ogte[10] = 0
# CHECK:   ogte[11] = 0
# CHECK:   ogte[12] = 0
# CHECK:   ogte[13] = 1
# CHECK:   ogte[14] = 1
# CHECK:   ogte[15] = 1
# CHECK:   ogte[16] = 1
# CHECK:   ogte[17] = 0

# CHECK: Buffer 'ugte' (72 bytes):
# CHECK:   ugte[0] = 1
# CHECK:   ugte[1] = 0
# CHECK:   ugte[2] = 1
# CHECK:   ugte[3] = 1
# CHECK:   ugte[4] = 0
# CHECK:   ugte[5] = 1
# CHECK:   ugte[6] = 0
# CHECK:   ugte[7] = 1
# CHECK:   ugte[8] = 1
# CHECK:   ugte[9] = 1
# CHECK:   ugte[10] = 1
# CHECK:   ugte[11] = 1
# CHECK:   ugte[12] = 1
# CHECK:   ugte[13] = 1
# CHECK:   ugte[14] = 1
# CHECK:   ugte[15] = 1
# CHECK:   ugte[16] = 1
# CHECK:   ugte[17] = 0

# CHECK: Buffer 'isnan' (72 bytes):
# CHECK:   isnan[0] = 0
# CHECK:   isnan[1] = 0
# CHECK:   isnan[2] = 0
# CHECK:   isnan[3] = 0
# CHECK:   isnan[4] = 0
# CHECK:   isnan[5] = 0
# CHECK:   isnan[6] = 0
# CHECK:   isnan[7] = 0
# CHECK:   isnan[8] = 0
# CHECK:   isnan[9] = 0
# CHECK:   isnan[10] = 1
# CHECK:   isnan[11] = 1
# CHECK:   isnan[12] = 0
# CHECK:   isnan[13] = 0
# CHECK:   isnan[14] = 0
# CHECK:   isnan[15] = 0
# CHECK:   isnan[16] = 0
# CHECK:   isnan[17] = 0

# CHECK: Buffer 'isinf' (72 bytes):
# CHECK:   isinf[0] = 0
# CHECK:   isinf[1] = 0
# CHECK:   isinf[2] = 0
# CHECK:   isinf[3] = 0
# CHECK:   isinf[4] = 0
# CHECK:   isinf[5] = 0
# CHECK:   isinf[6] = 0
# CHECK:   isinf[7] = 0
# CHECK:   isinf[8] = 0
# CHECK:   isinf[9] = 0
# CHECK:   isinf[10] = 0
# CHECK:   isinf[11] = 0
# CHECK:   isinf[12] = 0
# CHECK:   isinf[13] = 1
# CHECK:   isinf[14] = 1
# CHECK:   isinf[15] = 1
# CHECK:   isinf[16] = 1
# CHECK:   isinf[17] = 1
