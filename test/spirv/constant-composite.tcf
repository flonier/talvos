# Test that OpConstantComposite objects can be created and referenced via
# OpVariable declarations using the Private storage class.
# Also has coverage for nested composite constants.

MODULE constant-composite.spvasm
ENTRY split

BUFFER x 16 FILL INT32 0
BUFFER y 16 FILL INT32 0
BUFFER z 16 FILL INT32 0
BUFFER w 16 FILL INT32 0

DESCRIPTOR_SET 0 0 0 x
DESCRIPTOR_SET 0 1 0 y
DESCRIPTOR_SET 0 2 0 z
DESCRIPTOR_SET 0 3 0 w

DISPATCH 4 1 1

DUMP INT32 x
DUMP INT32 y
DUMP INT32 z
DUMP INT32 w

# CHECK: Buffer 'x' (16 bytes):
# CHECK:   x[0] = 7
# CHECK:   x[1] = -6
# CHECK:   x[2] = 8
# CHECK:   x[3] = 10
# CHECK: Buffer 'y' (16 bytes):
# CHECK:   y[0] = 42
# CHECK:   y[1] = 43
# CHECK:   y[2] = -41
# CHECK:   y[3] = 50
# CHECK: Buffer 'z' (16 bytes):
# CHECK:   z[0] = -2
# CHECK:   z[1] = 3
# CHECK:   z[2] = 0
# CHECK:   z[3] = 5
# CHECK: Buffer 'w' (16 bytes):
# CHECK:   w[0] = 321
# CHECK:   w[1] = 456
# CHECK:   w[2] = 987
# CHECK:   w[3] = -1023
